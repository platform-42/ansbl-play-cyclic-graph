---
- name: all_cycles
  set_fact: 
    all_cycles: "{{ cycle_candidates.query_read.cypher_response }}"

- name: debug
  ansible.builtin.debug:
    var: all_cycles

#- name: "Detect fast cycles within previously detected cycles"
#  loop: "{{ all_cycles.results }}"
#  loop_control:
#    label: "{{ item.startAccount }}"
#  platform42.neo4j.query:
#    neo4j_uri: "{{ NEO4J_URI }}"
#    database: "{{ NEO4J_DATABASE }}"
#    username: "{{ NEO4J_USERNAME }}"
#    password: "{{ NEO4J_PASSWORD }}"
#    cypher: |
#      // use the path discovered in step 1
#      WITH {{ item.cyclePath | to_json }} AS nodeIds
#      MATCH p=(a:Account)-[:TRANSACTION*2..6]->(a)
#      WHERE a.id IN nodeIds
#      WITH p,
#           [r IN relationships(p) | datetime(r.timestamp)] AS times,
#           a
#      WITH p, a, apoc.coll.sort(times) AS sortedTimes
#      WHERE duration.between(sortedTimes[0], sortedTimes[-1]).days < 3
#      RETURN
#        a.id AS startAccount,
#        [x IN nodes(p) | x.id] AS cyclePath,
#        length(p) AS hops,
#        reduce(total=0, t IN relationships(p) | total + t.amount) AS totalAmount,
#        [r IN relationships(p) | r.timestamp] AS timestamps
#      ORDER BY totalAmount DESC;
#  register: fast_cycle_subset