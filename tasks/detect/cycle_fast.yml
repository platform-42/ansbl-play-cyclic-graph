---
- name: all_cycles
  ansible.builtin.set_fact: 
    cycle_fast_input: "{{ cycle_candidates_output.query_read.cypher_response }}"

- name: "Detect fast cycles within previously detected cycles"
  platform42.neo4j.query_read:
    neo4j_uri: "{{ NEO4J_URI }}"
    database: "{{ NEO4J_DATABASE }}"
    username: "{{ NEO4J_USERNAME }}"
    password: "{{ NEO4J_PASSWORD }}"
    query: |
      MATCH p=(a:Account)-[:TRANSACTION*2..6]->(a)
      WHERE a.id IN $nodeIds
      WITH p,
           [r IN relationships(p) | datetime(r.timestamp)] AS times,
           a
      WITH p, a, apoc.coll.sort(times) AS sortedTimes
      WHERE duration.between(sortedTimes[0], sortedTimes[-1]).days < 3
      RETURN
        a.id AS startAccount,
        [x IN nodes(p) | x.id] AS cyclePath,
        length(p) AS hops,
        reduce(total=0, t IN relationships(p) | total + t.amount) AS totalAmount,
        [r IN relationships(p) | r.timestamp] AS timestamps
      ORDER BY totalAmount DESC
      ;
    parameters:
      nodeIds: "{{ item.cyclePath }}"
  loop: "{{ cycle_fast_input}}"
  loop_control:
    label: "{{ item.startAccount }}"
  register: fast_cycle_output

- name: print
  ansible.builtin.debug:
    var: fast_cycle_output